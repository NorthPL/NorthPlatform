/**
 * NorthPlatform's root build script
 */

buildscript {
    dependencies {
        classpath files('Libraries/gradle-idea-ext-1.0.2-SNAPSHOT.jar')
    }
}

plugins {
    id 'maven-publish'
    id 'org.ajoberstar.grgit' version '4.1.0'
    id "io.freefair.lombok" version "5.3.3.3"
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

allprojects {
    repositories() {
        flatDir {
            dirs "$rootDir/Libraries"
        }

        mavenLocal()

        mavenCentral()

        maven {
            url = "https://maven.enginehub.org/repo/"
        }
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'com.github.johnrengelman.shadow'

    compileJava {
        options.compilerArgs << '-parameters'
    }

    jar {
        // Add some attributes to every manifest
        manifest {
            attributes 'Name': project.name
            attributes 'Implementation-Version': project.version
        }
    }

    shadowJar {
        archiveFileName = "${project.name}.jar"

        // ShadowJavaPlugin#configureShadowTask - remove doFirst with manifest
        getActions().remove(0)
    }

    test {
        useJUnitPlatform()
    }

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"

    version = grgit.head().abbreviatedId

    // execute shadowJar when we run 'gradle build' or 'gradle jar'
    tasks.build.dependsOn tasks.shadowJar
    tasks.jar.dependsOn tasks.shadowJar
}

apply plugin: 'org.jetbrains.gradle.plugin.idea-ext'

idea.project.settings {
    ideArtifacts {
        "API.jar" {
            archive("API.jar") {
                moduleOutput("NorthPlatform.API.main")
                directoryContent('Sources/API/src/main/resources/')
                extractedLibraries(project(":API").configurations.runtimeClasspath)
            }
        }

        "API.BaseFeatures.jar" {
            archive("API.BaseFeatures.jar") {
                moduleOutput("NorthPlatform.API.BaseFeatures.main")
                directoryContent('Sources/API/BaseFeatures/src/main/resources/')
            }
        }

        "API.Chat.jar" {
            archive("API.Chat.jar") {
                moduleOutput("NorthPlatform.API.Chat.main")
                directoryContent('Sources/API/Chat/src/main/resources/')
            }
        }

        "API.Economy.jar" {
            archive("API.Economy.jar") {
                moduleOutput("NorthPlatform.API.Economy.main")
                directoryContent('Sources/API/Economy/src/main/resources/')
            }
        }

        "API.MiniGame.jar" {
            archive("API.MiniGame.jar") {
                moduleOutput("NorthPlatform.API.MiniGame.main")
                directoryContent('Sources/API/MiniGame/src/main/resources/')
            }
        }

        "AntyCheat" {
            archive("AntyCheat.jar") {
                moduleOutput("NorthPlatform.AntyCheat.main")
                directoryContent('Sources/AntyCheat/src/main/resources/')
            }
        }

        "AntyCheat.Client" {
            archive("AntyCheat.Client.jar") {
                moduleOutput("NorthPlatform.AntyCheat.AntyCheatClient.main")
                directoryContent('Sources/AntyCheat/AntyCheatClient/src/main/resources/')
            }
        }

        "GlobalShops" {
            archive("GlobalShops.jar") {
                moduleOutput("NorthPlatform.GlobalShops.main")
                directoryContent('Sources/GlobalShops/src/main/resources/')
            }
        }

        "GroovyScript" {
            archive("GroovyScript.jar") {
                moduleOutput("NorthPlatform.GroovyScript.main")
                directoryContent('Sources/GroovyScript/src/main/resources/')
                extractedLibraries(project(":GroovyScript").configurations.runtimeClasspath)
            }
        }

        "ItemShop" {
            archive("ItemShop.jar") {
                moduleOutput("NorthPlatform.ItemShop.main")
                directoryContent('Sources/ItemShop/src/main/resources/')
            }
        }

        "Lobby" {
            archive("Lobby.jar") {
                moduleOutput("NorthPlatform.Lobby.main")
                directoryContent('Sources/Lobby/src/main/resources/')
            }
        }

        "MiniGame.BedWars" {
            archive("MiniGame.BedWars.jar") {
                moduleOutput("NorthPlatform.MiniGame.BedWars.main")
                directoryContent('Sources/MiniGame/BedWars/src/main/resources/')
            }
        }

        "MiniGame.ElytraRace" {
            archive("MiniGame.ElytraRace.jar") {
                moduleOutput("NorthPlatform.MiniGame.ElytraRace.main")
                directoryContent('Sources/MiniGame/ElytraRace/src/main/resources/')
            }
        }

        "MiniGame.GoldHunter" {
            archive("MiniGame.GoldHunter.jar") {
                moduleOutput("NorthPlatform.MiniGame.GoldHunter.main")
                directoryContent('Sources/MiniGame/GoldHunter/src/main/resources/')
            }
        }

        "NetworkController.jar" {
            archive("NetworkController.jar") {
                moduleOutput("NorthPlatform.NetworkController.main")
                directoryContent('Sources/NetworkController/src/main/resources/')
            }
        }

        "NoPremiumAuth" {
            archive("NoPremiumAuth.jar") {
                moduleOutput("NorthPlatform.NoPremiumAuth.main")
                directoryContent('Sources/NoPremiumAuth/src/main/resources/')
            }
        }

        "RestfulApi" {
            archive("RestfulApi.jar") {
                moduleOutput("NorthPlatform.RestfulApi.main")
                directoryContent('Sources/RestfulApi/src/main/resources/')
                extractedLibraries(project(":RestfulApi").configurations.runtimeClasspath)
            }
        }

        "WorldProperties" {
            archive("WorldProperties.jar") {
                moduleOutput("NorthPlatform.WorldProperties.main")
                directoryContent('Sources/WorldProperties/src/main/resources/')
            }
        }
    }
}