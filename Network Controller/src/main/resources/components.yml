components:
  - name: API.UpdateServer
    enabled: false # we have Docker-powered update system.
    mainClass: "pl.north93.zgame.api.global.update.server.UpdateServer"
    description: "North Platform updating server."
    dependencies:
      - API.Database.Redis.RPC

  - name: NetworkController.Core
    enabled: true
    mainClass: "pl.north93.zgame.controller.core.NetworkControllerCore"
    autoInstantiate: true
    description: "Manages Minecraft network."
    dependencies:
      - API.Database.StorageConnector
      - API.Database.Redis.MessagePackSerializer
      - API.Database.Redis.Subscriber
      - API.Database.Redis.RPC

  - name: NetworkController.RepoServer
    enabled: false #uncompleted feature
    mainClass: "pl.north93.zgame.controller.reposerver.RepoServer"
    autoInstantiate: true
    description: "Repository server"
    dependencies: []

  - name: NetworkController.ConfigBroadcaster
    enabled: true
    mainClass: "pl.north93.zgame.controller.configbroadcaster.ConfigBroadcaster"
    autoInstantiate: true
    description: "Broadcasts config to Redis"
    dependencies:
      - NetworkController.Core
      - API.Database.StorageConnector
      - API.Database.Redis.MessagePackSerializer

  - name: NetworkController.ServersManager
    enabled: true
    mainClass: "pl.north93.zgame.controller.servers.NetworkServersManager"
    autoInstantiate: true
    description: "Manages all servers in network."
    dependencies:
      - NetworkController.Core
      - NetworkController.ConfigBroadcaster
      - API.Database.Redis.Observer
      - API.Database.StorageConnector
      - API.Database.Redis.MessagePackSerializer

  - name: NetworkController.PlayersDataFixer
    enabled: true
    mainClass: "pl.north93.zgame.controller.playerfixer.PlayersDataFixer"
    autoInstantiate: true
    description: "Removes abandoned player's data."
    dependencies:
      - API.Database.StorageConnector
      - NetworkController.Core
      - API.MinecraftNetwork.NetworkManager
      - API.MinecraftNetwork.PlayersStorage